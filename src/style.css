/* style.css */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
    width: 100%;
    height: 100%;
    overflow: hidden;
}

body {
  font-family: system-ui, -apple-system, sans-serif;
  background-color: #000;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
}

#app-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative; /* Keep this for absolute positioning of controls */
}

#globe-canvas-wrapper {
  flex: 1; /* Makes wrapper fill available vertical space */
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #000;
  cursor: grab;
}

#globe-canvas-wrapper:active {
  cursor: grabbing;
}

#globe-canvas {
  /* Removed flex: 1 here to allow JS to directly control width/height attributes reliably */
  /* object-fit: contain is still useful if the canvas element itself is larger than its drawing buffer */
  object-fit: contain;
  display: block; /* Ensures no extra space below the canvas if it's inline */
  /* Added these for initial flexibility before JS sets attributes */
  max-width: 100%; 
  max-height: 100%;
}


#controls {
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 10;
}

#projection-toggle {
  background: rgba(0, 128, 128, 0.9);
  border: 2px solid #008080;
  color: white;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: bold;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

#projection-toggle:hover:not(:disabled) {
  background: rgba(0, 128, 128, 1);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 128, 128, 0.4);
}

#projection-toggle:active {
  transform: translateY(0);
}

#projection-toggle:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* These classes are not used in the JS directly, but are good for semantic CSS */
.graticule {
  fill: none;
  stroke: rgba(255, 255, 255, 0.2);
  stroke-width: 0.5px;
}

.great-circle {
  fill: none;
  stroke: #ff4444;
  stroke-width: 2px;
}
